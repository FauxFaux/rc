[user]
	name = Chris West (Faux)
	email = git@goeswhere.com
[core]
	pager = most
	logAllRefUpdates = on
[alias]
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	co = checkout
	fa = fetch --all
	fe = fetch
	rc = rebase --continue
	rs = rebase --skip
	ri = rebase --interactive
	ra = rebase --abort
	sl = stash list
	st = status
	d = diff
	di = diff
	aa = add -A
	a = add
	ci = commit
	rh = reset --hard
	rp = repack -adf
	pur = pull --rebase
	cam = commit -am
	fixup = commit --amend -CHEAD
	mergeback = "!f() { git update-ref refs/heads/master -m \"Force-merging master with current branch $(git symbolic-ref HEAD)\" $(echo \"$1\" | git commit-tree \"HEAD^{tree}\" -p refs/heads/master -p HEAD); git lg master HEAD -4 | cat; }; f"
	resetother = "!f(){ git update-ref refs/heads/$1 $2; git lg -4 $1 | cat; }; f"
	po = push origin
	cm = commit -m
	bf = branch -f
	bv = branch -vv
	cp = cherry-pick
	desc = "!f() { if [ $# = 0 ]; then S=HEAD; else S=\"$1\"; fi; git describe --contains $S 2> /dev/null || git describe --tags $S; }; f"
	pokeolite = !git ls-remote origin | grep -w refs/heads/poke && git push origin :poke || git push origin master:poke
	resolved = "!f() { if [ $# = 0 ]; then S=HEAD; else S=\"$1\"; fi; if git describe --contains $S >/dev/null 2> /dev/null; then echo Fixed in $(git describe --contains $S | cut -d~ -f1 ).; else echo Will be fixed in the next release after $(git describe --tags $S | cut -d- -f1).; fi }; f"
[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
[rebase]
	autosquash = true
[help]
	format = web
[web]
	browser = chrome-debian
[browser "chrome-debian"]
	cmd = /opt/google/chrome/chrome
[url "git@goeswhere.com:"]
	insteadOf = "reg:"
[url "git@github.com:"]
	insteadOf = "gh:"
	insteadOf = "github:"
	insteadOf = "git://github.com/"
	insteadOf = "https://github.com/"
[url "git@github.com:FauxFaux/"]
	insteadOf = "ghf:"
[push]
	default = tracking
[core "include"]
	path = ~/.gitconfig-local

[pull]
	rebase = true
